name: Auto Tag my Application
on:
  pull_request:
    types:
      - closed
    branches:
      - main
concurrency: production
jobs:
  Patch:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get -y install --no-install-recommends git-buildpackage
      - uses: actions/checkout@v3

      - name: Check Tag
        id: taggerDryRun
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: "main"
          release_strategy: "none"
          tag_format: "%major%.%minor%.%patch%"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update debian/changelog
        run: |
          export DEBFULLNAME=$(grep '^Maintainer:' debian/control | cut -d : -f 2 | cut -d '<' -f 1 | xargs echo)
          export DEBEMAIL=$(grep '^Maintainer:' debian/control | cut -d '<' -f 2 | tr -d '>')
          git config --local user.name "$DEBFULLNAME"
          git config --local user.email "$DEBEMAIL"
          #
          if [ -s debian/changelog ]; then
            if [ $(head -n 1 debian/changelog | grep -c 'UNRELEASED;') == 1 ]; then
              sed -i 's|UNRELEASED;|unstable;|' debian/changelog;
            else
              echo "No UNRELEASED version!"
              exit 1;
            fi
          else
            dch --package test --create --newversion ${{ steps.taggerDryRun.outputs.tag }} --empty
          fi
          gbp dch --ignore-branch --new-version ${{ steps.taggerDryRun.outputs.tag }} --debian-tag='%(version)s' --upstream-tag='%(version)s'
          git add debian/changelog
        env:
          TZ: UTC0

      - name: "Commit all changed files back to the repository"
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_options: '--signoff'
          push_options: '--force'
          branch: "main"

      - name: Apply Tag
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: "main"
          release_strategy: "release"
          tag_format: "%major%.%minor%.%patch%"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
